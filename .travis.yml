language: cpp
sudo: required
dist: trusty
services:
  - docker

env:
  global:
    - "FTP_SERVER=ftp://jk2mv.org"
    - "FTP_USER=defaultcideploy"
    - secure: "Kr9l60txHt8qJsZ/GFRe3f+U3N222qIMFq9Y5kjtF0cZaDb5/+a4cAp58AhtADkWJU5kiB8SR6IFoQ2f71NIuj4/k4SJr6HI8S7gjzY+5HaWdl6/us52BqxlQCg82BJNKavhQ4dK7Yb9GBoXmc7LXmmcXHwGuQR6rsWJs1cR9J8="

notifications:
  irc:
    channels:
      - "irc.quakenet.org#jk2mv"
    template:
      - "%{repository} (%{commit}): %{commit_subject}"
      - "(%{result}): %{message}"
      - "Build details: %{build_url}"

matrix:
  include:
    - os: linux
      env: HOST=linux-x86_64-gcc
    - os: osx
      env: HOST=macosx-x86_64-clang

before_install: |
  git fetch --unshallow
  if [[ "$HOST" == linux-x86_64-gcc ]]; then
      docker pull ubuntu:16.04
      docker run --name bc -v $TRAVIS_BUILD_DIR:/jk2mv -td ubuntu:16.04 /bin/bash
  fi

install: |
  if [[ "$HOST" == linux-x86_64-gcc ]]; then
      docker exec bc apt update
      docker exec bc apt -y install git cmake zip rpm debhelper devscripts build-essential libsdl2-dev libgl1-mesa-dev libopenal-dev
  else
      cd ~
      curl -O https://www.libsdl.org/release/SDL2-2.0.5.tar.gz
      tar xzf SDL2-2.0.5.tar.gz
      cd SDL2-2.0.5/Xcode/SDL
      sed -i -e 's/@rpath//g' SDL.xcodeproj/project.pbxproj
      xcodebuild -configuration Release
      mkdir -p ~/Library/Frameworks/
      ln -s `pwd`/build/Release/SDL2.framework ~/Library/Frameworks/
  fi

script: |
  mkdir $TRAVIS_BUILD_DIR/build/travis
  cd $TRAVIS_BUILD_DIR/build/travis
  if [[ "$HOST" == linux-x86_64-gcc ]]; then
      docker exec bc sh -c "cd /jk2mv/build/travis && cmake -DUseInternalPNG=ON -DUseInternalJPEG=ON -DUseInternalZLIB=ON -DUseInternalMiniZip=ON -DBuildPortableVersion=OFF -DBuildPackDEB=ON -DBuildPackRPM=ON ../.."
      docker exec bc sh -c "cd /jk2mv/build/travis && make"
      docker exec bc sh -c "cd /jk2mv/build/travis && make package"
  else
      cmake -G "Unix Makefiles" -DUseInternalPNG=ON -DUseInternalJPEG=ON -DUseInternalZLIB=ON -DUseInternalMiniZip=ON -DBuildPortableVersion=OFF ../..
      make
      make package
  fi

after_script: |
  if [[ "$HOST" == linux-x86_64-gcc ]]; then docker stop bc; fi

after_success: |
  if [[ "${TRAVIS_PULL_REQUEST}" = "false" ]] && [[ "${TRAVIS_BRANCH}" = "master" ]]; then
      cd $TRAVIS_BUILD_DIR/build/travis/out
      for i in *.{deb,rpm,dmg}; do
          curl -T ${i} -u $FTP_USER:$FTP_PASSWORD $FTP_SERVER
      done
  fi
